apply plugin: 'com.android.application'

android {
  compileSdkVersion androidVersions.compileSdkVersion
  buildToolsVersion androidVersions.buildToolsVersion

  defaultConfig {
    minSdkVersion androidVersions.minSdkVersion
    targetSdkVersion androidVersions.targetSdkVersion
    applicationId "com.mapbox.mapboxsdk.plugins.testapp"
    testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    vectorDrawables.useSupportLibrary = true
  }

  buildTypes {
    debug {
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
      testCoverageEnabled true
    }
    release {
      minifyEnabled true
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
    }
  }

  lintOptions {
    abortOnError false
  }

  testOptions {
    unitTests.all {
      jacoco {
        includeNoLocationClasses = true
      }
    }
  }

  dexOptions {
    maxProcessCount 8
    javaMaxHeapSize "2g"
    preDexLibraries true
  }

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }
}

// Disable Leak Canary for UI and unit test.
configurations.all { config ->
  if (config.name.contains('UnitTest') || config.name.contains('AndroidTest')) {
    config.resolutionStrategy.eachDependency { details ->
      if (details.requested.group == 'com.squareup.leakcanary'
          && details.requested.name == 'leakcanary-android') {
        details.useTarget(group: details.requested.group, name: 'leakcanary-android-no-op',
            version: details.requested.version)
      }
    }
  }
}

dependencies {
  // Mapbox
  implementation dependenciesList.mapboxMapSdk
  implementation dependenciesList.mapboxGeocoding

  // Architecture
  implementation dependenciesList.lifecycleExtensions
  implementation dependenciesList.roomRuntime
  annotationProcessor dependenciesList.roomCompiler

  // Google Play Location
  implementation dependenciesList.playLocation

  // Support libraries
  implementation dependenciesList.supportAnnotation
  implementation dependenciesList.supportAppcompatV7
  implementation dependenciesList.supportDesign
  implementation dependenciesList.supportRecyclerView
  implementation dependenciesList.supportConstraintLayout

  // Unit testing
  testImplementation dependenciesList.junit
  testImplementation dependenciesList.mockito

  // Instrumentation testing
  androidTestImplementation dependenciesList.mockitoAndroid
  androidTestImplementation dependenciesList.supportAppcompatV7
  androidTestImplementation dependenciesList.testRunner
  androidTestImplementation dependenciesList.testRules
  androidTestImplementation dependenciesList.testEspressoCore
  androidTestImplementation dependenciesList.testRoom
  androidTestImplementation dependenciesList.testArchCore
  androidTestImplementation(dependenciesList.mockitoCore, {
    exclude group: 'net.bytebuddy'
  })

  implementation dependenciesList.materialDialogs

  // Square crew
  implementation dependenciesList.timber
  implementation dependenciesList.butterKnife
  annotationProcessor dependenciesList.butterKnifeProcessor

  // Leak canary
  debugImplementation dependenciesList.leakCanaryDebug
  releaseImplementation dependenciesList.leakCanaryRelease
  testImplementation dependenciesList.leakCanaryTest

  // Plugin modules
  implementation project(':plugin-traffic')
  implementation project(':plugin-locationlayer')
  implementation project(':plugin-building')
  implementation project(':plugin-geojson')
  implementation project(':plugin-cluster')
  implementation project(':plugin-places')
  implementation project(':plugin-offline')
  implementation project(':plugin-localization')
}

apply from: "${rootDir}/gradle/checkstyle.gradle"
apply from: "${rootDir}/gradle/generate-token.gradle"