apply plugin: 'com.android.application'

android {
  compileSdkVersion androidVersions.compileSdkVersion
  buildToolsVersion androidVersions.buildToolsVersion

  defaultConfig {
    minSdkVersion androidVersions.minSdkVersion
    targetSdkVersion androidVersions.targetSdkVersion
    applicationId "com.mapbox.mapboxsdk.plugins.testapp"
    testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    vectorDrawables.useSupportLibrary = true
  }

  buildTypes {
    debug {
      testCoverageEnabled true
    }
    release {
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
    }
  }

  lintOptions {
    abortOnError false
  }

  dexOptions {
    maxProcessCount 8
    javaMaxHeapSize "2g"
    preDexLibraries true
  }
}

dependencies {
  // Mapbox
  implementation dependenciesList.mapboxMapSdk
  implementation dependenciesList.mapboxServices
  implementation dependenciesList.mapboxGeocoding

  implementation dependenciesList.lifecycleExtensions
  implementation dependenciesList.roomRuntime
  annotationProcessor dependenciesList.roomCompiler

  // Support libraries
  implementation dependenciesList.supportAnnotation
  implementation dependenciesList.supportAppcompatV7
  implementation dependenciesList.supportDesign
  implementation dependenciesList.supportRecyclerView
  implementation dependenciesList.supportConstraintLayout

  // Unit testing
  testImplementation dependenciesList.junit
  testImplementation dependenciesList.mockito

  // Instrumentation testing
  androidTestImplementation dependenciesList.mockitoAndroid
  androidTestImplementation dependenciesList.supportAppcompatV7
  androidTestImplementation dependenciesList.testRunner
  androidTestImplementation dependenciesList.testRules
  androidTestImplementation dependenciesList.testEspressoCore
  androidTestImplementation dependenciesList.testRoom
  androidTestImplementation dependenciesList.testArchCore
  androidTestImplementation( dependenciesList.mockitoCore, {
    exclude group: 'net.bytebuddy'})

  implementation dependenciesList.materialDialogs

  // Square crew
  implementation dependenciesList.timber
  implementation dependenciesList.butterKnife
  annotationProcessor dependenciesList.butterKnifeProcessor

  // Leak canary
  debugImplementation dependenciesList.leakCanaryDebug
  releaseImplementation dependenciesList.leakCanaryRelease
  testImplementation dependenciesList.leakCanaryTest

  // Plugin modules
  implementation project(':plugin-traffic')
  implementation project(':plugin-locationlayer')
  implementation project(':plugin-building')
  implementation project(':plugin-geojson')
  implementation project(':plugin-cluster')
  implementation project(':plugin-places')
  implementation project(':plugin-offline')
}

sonarqube {
  skipProject = true
}

apply from: "${rootDir}/gradle/checkstyle.gradle"
apply from: "${rootDir}/gradle/generate-token.gradle"