---
format_version: 1.3.1
default_step_lib_source: https://github.com/bitrise-io/bitrise-steplib.git
trigger_map:
- is_pull_request_allowed: false
  pattern: scheduled
  workflow: scheduled
- is_pull_request_allowed: true
  pattern: "*"
  workflow: primary
workflows:
  primary:
    steps:
    - script:
        title: Download Mapbox Access token
        inputs:
        - content: |-
           #!/bin/bash
           wget -O plugins/app/src/main/res/values/developer-config.xml "$BITRISEIO_MAPBOX_ACCESS_TOKEN_URL"
    - gradle-runner@1.5.4:
        inputs:
        - gradle_task: "$CHECKSTYLE_TASK"
    - gradle-runner@1.5.4:
        inputs:
        - gradle_task: "$UNITTEST_TASK"
    - gradle-runner@1.5.4:
        inputs:
        - gradle_task: "$GRADLE_TASK"
    - script:
        title: Configure Google Cloud SDK
        inputs:
        - content: |-
            #!/bin/bash
            # Install python tools for pip
            sudo apt-get install -y gcc python-dev python-setuptools
            sudo easy_install -U pip
            sudo pip uninstall crcmod
            sudo pip install -U crcmod
            # Install Google Cloud SDK for Firebase
            export CLOUD_SDK_REPO="cloud-sdk-$(lsb_release -c -s)"
            echo "deb http://packages.cloud.google.com/apt $CLOUD_SDK_REPO main" | sudo tee /etc/apt/sources.list.d/google-cloud-sdk.list
            curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -
            sudo apt-get update && sudo apt-get install -y google-cloud-sdk
            # Configure
            set -euo pipefail
            echo "Downloading Google Cloud authentication:"
            wget -O google-services.json "$BITRISEIO_GOOGLE_SERVICES_JSON_URL"
            gcloud auth activate-service-account --key-file google-services.json --project mapbox-plugins-android-4e407
    - script:
        title: Run Firebase Roboto tests on test application
        inputs:
        - content: |-
            #!/bin/bash
            gcloud firebase test android run --type robo --app "$BITRISE_APK_PATH" --device-ids shamu --os-version-ids 22 --locales en --orientations portrait --timeout 10m
    - gradle-runner@1.5.4:
        inputs:
        - gradle_task: "$INSTRUMENTATIONTEST_TASK"
    - script:
        title: Run Firebase Instrumentation tests
        inputs:
        - content: |-
            #!/bin/bash
            gcloud firebase test android run --type instrumentation --app ./plugins/app/build/outputs/apk/app-debug.apk --test ./plugins/app/build/outputs/apk/app-debug-androidTest.apk --device-ids shamu --os-version-ids 22 --locales en --orientations portrait --timeout 15m
    - deploy-to-bitrise-io@1.2.9: {}
    - slack:
        title: Post to Slack
        inputs:
        - webhook_url: "$SLACK_HOOK_URL"
        - channel: "#mobile-bots"
        - from_username: Bitrise Mapbox Plugins Android
        - from_username_on_error: Bitrise Mapbox Plugins Android
        - message: "<${BITRISE_BUILD_URL}|Build #${BITRISE_BUILD_NUMBER}> for <https://github.com/mapbox/mapbox-plugins-android/compare/${BITRISE_GIT_BRANCH}|mapbox/mapbox-plugins-android@${BITRISE_GIT_BRANCH}>
            by ${GIT_CLONE_COMMIT_COMMITER_NAME} passed"
        - message_on_error: "<${BITRISE_BUILD_URL}|Build #${BITRISE_BUILD_NUMBER}>
            for <https://github.com/mapbox/mapbox-plugins-android/compare/${BITRISE_GIT_BRANCH}|mapbox/mapbox-plugins-android@${BITRISE_GIT_BRANCH}>
            by ${GIT_CLONE_COMMIT_COMMITER_NAME} failed"
        - icon_url: https://bitrise-public-content-production.s3.amazonaws.com/slack/bitrise-slack-icon-128.png
        - icon_url_on_error: https://bitrise-public-content-production.s3.amazonaws.com/slack/bitrise-slack-error-icon-128.png
  scheduled:
    steps:
    - script:
        inputs:
        - content: |-
            #!/bin/bash
            apt-get install -y pkg-config python-pip python-dev build-essential
            pip install awscli
        title: Install Linux Dependencies
    - script:
        inputs:
        - content: |-
            #!/bin/bash
            aws s3 cp s3://mapbox/android/signing-credentials/secring.gpg secring.gpg
          opts:
            is_expand: true
        title: Fetch GPG Secring For SDK Signing
    - script:
        inputs:
        - content: |-
            #!/bin/bash
            echo "NEXUS_USERNAME=$PUBLISH_NEXUS_USERNAME
            NEXUS_PASSWORD=$PUBLISH_NEXUS_PASSWORD
            signing.keyId=$SIGNING_KEYID
            signing.password=$SIGNING_PASSWORD
            signing.secretKeyRingFile=../../secring.gpg" >> plugins/gradle.properties
          opts:
            is_expand: true
        title: Inject Signing And Publishing Credentials
    - script:
        inputs:
        - content: |-
            #!/bin/bash
            make build-release
        title: Build Plugins
    - script:
        inputs:
        - content: |-
            #!/bin/bash
            make test
        title: Run Plugins Unit Tests
    - script:
        inputs:
        - content: |-
            #!/bin/bash
            make publish
        title: Publish Plugins To Maven Central
    - slack:
        title: Post to Slack
        inputs:
        - webhook_url: "$SLACK_HOOK_URL"
        - channel: "#mobile-bots"
        - from_username: Bitrise Mapbox Plugins Android
        - from_username_on_error: Bitrise Mapbox Plugins Android
        - message: "Release of Mapbox Android Plugins success"
        - message_on_error: "Release of Mapbox Android Plugins failed! @android_team"
        - icon_url: https://bitrise-public-content-production.s3.amazonaws.com/slack/bitrise-slack-icon-128.png
        - icon_url_on_error: https://bitrise-public-content-production.s3.amazonaws.com/slack/bitrise-slack-error-icon-128.png
app:
  envs:
  - opts:
      is_expand: false
    GRADLE_BUILD_FILE_PATH: plugins/build.gradle
  - opts:
      is_expand: false
    GRADLE_TASK: assembleDebug
  - opts:
      is_expand: false
    CHECKSTYLE_TASK: checkstyle
  - opts:
      is_expand: false
    UNITTEST_TASK: test
  - opts:
      is_expand: false
    INSTRUMENTATIONTEST_TASK: assembleAndroidTest
  - opts:
      is_expand: false
    GRADLEW_PATH: plugins/gradlew
