apply plugin: 'jacoco'

jacoco {
  toolVersion = pluginVersion.jacoco
}

android {
  testOptions {
    unitTests.all {
      jacoco {
        append = false
        includeNoLocationClasses = true
        destinationFile = file("$buildDir/jacoco/test.exec")
      }
    }
  }
}

task jacocoTestReport(type: JacocoReport, dependsOn: 'testDebugUnitTest') {
  group = 'reporting'
  description = 'Generate Jacoco coverage reports'

  reports {
    xml.enabled = true
    html.enabled = true
  }

  def fileFilter = [
      '**/R.class',
      '**/R$*.class',
      '**/*$ViewInjector*.*',
      '**/*$ViewBinder*.*',
      '**/BuildConfig.*',
      '**/Manifest*.*',
      '**/*$Lambda$*.*', // Jacoco can not handle several "$" in class name.
      '**/*_Provide*Factory*.*',
      '**/*$*$*.*' // Anonymous classes generated by kotlin
  ]
  def debugTree = fileTree(dir: "${buildDir}/intermediates/classes/debug", excludes: fileFilter)
  def mainSrc = "${project.projectDir}/src/main/java"
  sourceDirectories = files([mainSrc])
  classDirectories = files([debugTree])
  executionData = fileTree(dir: project.projectDir, includes:
      ['**/*.exec', '**/*.ec'])
}