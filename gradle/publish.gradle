apply plugin: 'digital.wup.android-maven-publish'
apply plugin: 'maven-publish'
apply plugin: 'com.mapbox.sdkRegistry'
apply from: file('../gradle/artifact-settings.gradle')

version = project.ext.versionName
group = project.ext.mapboxArtifactGroupId

publishing {
    publications {
        ModularMapboxMapsSdkRegistryPublication(MavenPublication) {
            from components.android
            groupId this.group
            artifactId project.ext.mapboxArtifactId
            version this.version
            afterEvaluate {
              artifact(androidSourcesJar)
              artifact(androidJavadocsJar)
            }

            pom.withXml {
                final mainNode = asNode()
                mainNode.appendNode('name', project.ext.mapboxArtifactTitle)
                mainNode.appendNode('description', project.ext.mapboxArtifactTitle)
                mainNode.appendNode('url', project.ext.mapboxArtifactUrl)

                final licenseNode = mainNode.appendNode('licenses').appendNode('license')
                licenseNode.appendNode('name', project.ext.mapboxArtifactLicenseName)
                licenseNode.appendNode('url', project.ext.mapboxArtifactLicenseUrl)
                licenseNode.appendNode('distribution', "repo")

                final developerNode = mainNode.appendNode('developers').appendNode('developer')
                developerNode.appendNode('id', project.ext.mapboxDeveloperId)
                developerNode.appendNode('name', project.ext.mapboxDeveloperName)

                final scmNode = mainNode.appendNode("scm")
                scmNode.appendNode("connection", project.ext.mapboxArtifactScmUrl)
                scmNode.appendNode("developerConnection", project.ext.mapboxArtifactScmUrl)
                scmNode.appendNode("url", project.ext.mapboxArtifactUrl)
            }
        }
    }
}

registry {
    sdkName = project.ext.mapboxRegistrySdkName
    override = project.ext.versionName.endsWith("-SNAPSHOT")
    dryRun = false
    publish = true
    snapshot = project.ext.versionName.endsWith("-SNAPSHOT")
    publishMessage = "cc @mapbox/maps-android"
    publications = ["ModularMapboxMapsSdkRegistryPublication"]
}

task androidJavadocs(type: Javadoc) {
  source = android.sourceSets.main.java.sourceFiles
  classpath = files(android.bootClasspath)
  failOnError = false
}

task androidJavadocsJar(type: Jar, dependsOn: androidJavadocs) {
    classifier = 'javadoc'
    from androidJavadocs.destinationDir
}

task androidSourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.sourceFiles
}

// See: https://github.com/chrisbanes/gradle-mvn-push/issues/43#issuecomment-84140513
afterEvaluate { project ->
    android.libraryVariants.all { variant ->
        tasks.androidJavadocs.doFirst {
            classpath += files(variant.javaCompile.classpath.files)
            classpath += configurations.javadocDeps
        }
    }
}
